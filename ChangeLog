2008-11-19  Hynek Hanke  <hanke@brailcom.org>
	* all: Reorganization and new instalation procedure.
	
2008-08-13  Hynek Hanke  <hanke@brailcom.org>

	* src/provider/provider.py (Provider.__init__): Quit the driver process if initialization fails.

2008-07-02  Hynek Hanke  <hanke@brailcom.org>

	* src/provider/configuration.py (Configuration.__init__): Typo.

2008-05-12  Hynek Hanke  <hanke@brailcom.org>

	* src/provider/configuration.py (Configuration): Typo.

2008-05-07  Hynek Hanke  <hanke@brailcom.org>

	* src/ttsapi/errors.py (ErrorDriverBusy): New class.

	* src/ttsapi/connection.py (SHMConnection): New class.

	* src/ttsapi/client.py (TCPConnection.__init__): Shared memmory 'shm'
	added to supported communication methods.

	* src/provider/drivers/c/ttsapi.h (TIMESTAMP): New macro.
	(DBG): Only do debugging output if TTSPI_DRIVER_DEBUGGING is
	true.

	* src/provider/drivers/c/ttsapi.c (driver_audio_connection_init): Create stream
	in write mode.
	(driver_send_audio): Removed '=' signs in protocol.

	* src/provider/drivers/c/espeak.c (say_text_asynchro): Renamed
	from say_text_asynchro.  This function is now called from a
	separate thread (this is the fundamental difference, not the
	change of name) because calling it synchronously proved to be slow.
	
	* src/provider/drivers/sd_module.py (main): Reposition argv arguments since
	the first argument is now communication_method.

	* src/provider/drivers/festival.py (Controller.retrieve_data.read_item): Bugfix for
	correct procesing of mesage_end event.

	* src/provider/drivers/driver.py (RetrievalSocket.send_data_block): Handle the case when
	there are no data to send, just events and index marks.
	(DriverLogger.__init__): New class.
	(main_loop): Handle shared memory 'shm' communication mode.

	* src/provider/provider.py (Provider.say_text): Additional debugging messages.
	(Provider.say_icon): Do not check for current_message_id unless mutex protected.
	(Provider.__init__): Launch driver in with either 'pipe' or 'shm' communication
	according to configuration

	* src/provider/logs.py (Logging.init_stage2): New level: timestamp.

	* src/provider/configuration.py (Configuration): timestamp_priority: new option.
	(Configuration): Different format for output modules configuration.

2008-04-24  Hynek Hanke  <hanke@brailcom.org>

	* src/provider/provider.py (Provider.set_audio_output): List just relevant fields of real_capabilities in debugging output.

2008-04-23  Hynek Hanke  <hanke@brailcom.org>

	* src/provider/drivers/festival.py (Controller.retrieve_data.read_item): Always first send data
	to socket, then check for other data with speechd-next.

2008-01-21  Hynek Hanke  <hanke@syrr.buchal.name>

	* doc/tts-api-provider.texi (Basic Usage of TTS API): New section.

2007-12-21  Hynek Hanke  <hanke@syrr.buchal.name>

	* src/ttsapi/server.py (TCPConnection.close): New method.

	* src/ttsapi/connection.py (SocketConnection._read_line): Raise
	IOError on socket.error exception.

	* setup.py: New file.
	
	* src/provider/drivers/c/ttsapi.h (driver_get_message_id): New
	prototype.

	* src/provider/drivers/c/ttsapi.c (_ttsapi_set_message_id): New function.
	(driver_get_message_id): New function.
	(driver_audio_connection_init): Open stream for writing.

	* src/provider/drivers/c/espeak.c: Handle message_id and
	block_num correctly.

	* src/provider/drivers/driver.py (main_loop): Really exit

	* src/provider/sleep.py (Sleeper.__del__): Ignore
	exceptions on socket close.

	* src/provider/server.py (cleanup): New function.
	(sigint_signal_handler): New function.
	(main): Call cleanup() on exit

	* src/provider/audio.py: Thread objects are now global variables.
	(CtrlRequest): New event: 'quit'

2007-12-17  Hynek Hanke  <hanke@syrr.buchal.name>

	* src/provider/provider.py (Provider.__init__): Removed duplicit starting
	of driver processes.

2007-11-23  Hynek Hanke  <hanke@syrr.buchal.name>

	* src/provider/provider.py (Provider.__init__): Use
	os.path.join instead of string concatenation to construct
	path to module logs.

	* src/provider/configuration.py (Configuration.__init__): Use
	os.path.join instead of string concatenation to construct
	log_path

2007-11-21  Hynek Hanke  <hanke@syrr.buchal.name>

	* src/provider/provider.py (Provider.__init__): If a module
	could not be loaded, report the error in logfile and continue
	with others.

2007-11-21  Hynek Hanke  <hanke@syrr.buchal.name>
	
	* src/ttsapi/server.py (TCPConnection._report_error): Additional
	debugging, correct concatenation of error.data into err_detail.

	* src/ttsapi/structures.py (DriverCapabilities): can_parse_ssml ->
	message_format

	* src/provider/drivers/c/espeak.c: New file -- eSpeak driver.
	
	* src/provider/drivers/c/Makefile: New file.

	* src/provider/drivers/c/ttsapi.c: New file TTS API C driver skeleton.

	* src/provider/drivers/c/ttsapi.h: New file.
	
	* src/provider/drivers/driver.py (Core): Formatting.

	* src/provider/provider.py (Provider.say_text): Emulate plain from
	SSML and SSML from plain.

	* src/ttsapi/connection.py (PipeConnection._read_line): Removed
	IOError on empty line read.
	(SocketConnection.close): Close the socket after shutdown.
	(PipeConnection._read_line): Do not strip trailing newline.
	(Connection.receive_line): Strip trailing newline here.
	(Connection._recv_message): Strip trailing newline on client side
	as well.
	(PipeConnection._read_line): Raise IOError on all data reading errors.

	* src/ttsapi/connection.py (PipeConnection._read_line): IOError on
	empty message receival is back.

	* src/provider/audio.py (event_list): Now protected with event_list_lock.
	(Audio.play): Interrupt event_sleeper.

	* src/ttsapi/client.py (TCPConnection.raise_event): Typo.

	* src/ttsapi/connection.py (PipeConnection._read_line): Do not raise IOError
	if received empty line.

	* src/provider/drivers/sd_module.py: can_parse_ssml -> message_format
	(_SSIP_Connection._readline): Removed raising error if received only
	0 bytes on a line (which is ok if the line is empty...).

	* src/provider/drivers/festival.py: can_parse_ssml -> message_format


2007-11-17  Milan Zamazal  <pdm@brailcom.org>

	* src/provider/logs.py (Logging.init_stage2): Don't create file
	logger when logging to stdout.

2007-11-17  Milan Zamazal  <pdm@brailcom.org>

	* src/ttsapi/client.py (TCPConnection.say_text): Accept basestring
	as the `text' argument.

2007-10-17  Hynek Hanke  <hanke@syrr.buchal.name>

	* src/provider/drivers/driver.py: Moved from src/provider.

	* src/provider/drivers/festival.py: Moved from src/provider.

	* src/provider/drivers/sd_module.py: Moved from src/provider.

	* src/provider/driver.py: Moved to src/provider/drivers/driver.py

	* src/provider/sd_module.py: Moved to src/provider/drivers/

	* src/provider/festival.py: Moved to src/provider/drivers/
	
	* src/provider/configuration.py: Drivers moved to drivers/

	* doc/tts-api-provider.texi
	(Device Driver Implementation): New section.

2007-10-15  Hynek Hanke  <hanke@homer.brailcom.xx>

	* src/provider/festival.py (Core.__init__): Call super init()

2007-10-12  Hynek Hanke  <hanke@syrr.buchal.name>

	* doc/tts-api-provider.texi: @function -> @code, @textit -> @code

	* src/provider/driver.py (Core.register_callback): New function.

2007-10-12  Hynek Hanke  <hanke@syrr.buchal.name>
	
	* src/provider/sd_module.py: New file.

	* src/ttsapi/structures.py (Structure.__init__): Default
	value is now being copied, not assigned, to each new
	structure.

	* src/ttsapi/errors.py (ErrorDriverNotAvailable): New error class.

	* src/ttsapi/connection.py (PipeConnection._read_line): Raise
	IOError when 0 bytes is read.o

	* src/ttsapi/client.py (TCPConnection.__init__): Init
	of self._callbacks moved here from the class body.
	(TCPConnection.raise_event): Handle parameters of different
	events correctly.

	* src/provider/server.py (main): Added debug messages.

	* src/provider/provider.py (Provider.__init__): Append a unique
	string to every driver log filename.
	(Provider.__init__): Fallback on other available module if
	the default module is not available.

	* src/provider/festival.py (FestivalConnection.close): New function.
	(Core.quit): New function.
	(Core.drivers): Driver version incremented.
	(Core.driver_capabilities): Punctuation detail marked as not
	supported.

	* src/provider/driver.py (Core.quit): Rewritten.
	(EventCallback): New function.
	(main_loop): Handle ttsapi.server.CliengGone exception

	* src/provider/configuration.py ('Configuration
	'available_drivers'): Typo in docstring.
	(Configuration 'available_drivers'): Added configuration for
	speech dispatcher modules.
	(Configuration 'default_driver'): Docstring added.

	* src/provider/audio.py (messages_in_playback_lock): Added new
	lock. Apply this lock to all accesses to messages_in_playback.

	* src/ttsapi/connection.py (PipeConnection._read_line): If 0 bytes
	is read, raise IOError.
	(SocketConnection.read_data): Handle the situation when more
	data is waiting in the _buffer than what we need.

	* src/provider/driver.py (Controller.run): Added new event 'quit'
o
	* src/ttsapi/server.py (TCPConnection.process_input): Do not report
	error back to socket if reply is None.
	(TCPConnection.process_input): Pass ClientGone up.

	* src/ttsapi/_tests.py (VoiceTest.test_punctuation_detail): Only
	request punctuation detail settings if supported by the driver.

	* src/ttsapi/errors.py (ErrorDriverNotAvailable): New error.

2007-09-29  Hynek Hanke  <hanke@homer.brailcom.xx>

	* src/provider/sd_module.py: New module. Support for Speech Dispatcher
	modules.

	* src/provider/provider.py (Provider._prepare_for_message): Only try to set
	volume through audio if we are in emulated_playback.

	* src/provider/sleep.py: New module.

	* src/ttsapi/server.py (TCPConnection._report_error): Accept
	also TTSAPIError.

	* src/ttsapi/errors.py (TTSAPIError.__str__): Fixed.

	* src/provider/audio.py (Audio.set_volume): New function.
	(post_event): Added blocking mode.

	* src/provider/provider.py (Provider.set_volume): Handle volume settings.

	* src/provider/audio.py (events): Use sleep.Sleeper() for sleeping.
	(receive_data): If events are received, call event_sleeper.interrupt()

	* src/provider/sleep.py (Sleeper): New module/class.

2007-09-24  Hynek Hanke  <hanke@homer.brailcom.xx>

	* src/ttsapi/connection.py (SocketConnection._write): Raise IOError
	if socket.send() is not succesfull.
	(SocketConnection.close): Raise IOError
	if socket.shutdown() is not succesfull.

	* src/ttsapi/client.py: Import logging.

	* src/provider/festival.py (Controller.retrieve_data.read_item): Added
	condition to terminate data reading when audio_data is not None,
	but empty (only NIST header, no data).

	* src/provider/audio.py (MessageNotInPlayback): New exception.


	* src/provider/festival.py (Controller.retrieve_data.read_item)
	(Controller.retrieve_data.read_item): Terminate if audio_data is
	None or if lenght of audio data is 0.
	(Controller.retrieve_data.read_item): Missing return added.

	* src/ttsapi/server.py (TCPConnection.send_audio_event): Call
	self._quit() instead of raising ClientGone
	(TCPConnection._report_error): Call self._quit() on IOError.

	* src/provider/provider.py (Provider.cancel): Call 'discard' instead of 'stop'.
	This is necessary so that we prevent messages from being said even when
	audio output was not started yet.

	* src/provider/audio.py (Audio.stop): Do not raise an exception if
	attempting to stop a message not in playback
	(Audio.stop): String exception "Message not in playback" converted
	to MessageNotInPlayback(Exception)

	* src/provider/festival.py (Controller.say_icon): Festival command
	speechd-icon changed to speechd-sound-icon.

2007-09-24  Hynek Hanke  <hanke@syrr.buchal.name>

	* src/provider/provider.py (Provider): Modified asserts so that
	unicode text input is accepted.

	* src/ttsapi/client.py (TCPConnection): Use logging.

	* src/ttsapi/structures.py (Structure.__str__): New method.

	* src/ttsapi/errors.py (TTSAPIError.__init__): Error description
	argument renamed and moved to optional.
	(TTSAPIError.__str__): New method.

	* src/provider/driver.py (RetrievalSocket.send_data_block): Protect
	socket.send() with a lock.

	* src/provider/audio.py (receive_data): Only call read_data when
	data_length != 0.


	* src/ttsapi/server.py (TCPConnection.process_input): Report UnknownError on socket,
	do not raise exception.
	(TCPConnection._report_error): Accept exception classes as parameter.

	* src/provider/driver.py (RetrievalSocket.__init__): Use lock to protect
	data write on socket.

	* src/ttsapi/server.py (TCPConnection.process_input): If
	TTSAPIError is raised, try to translate it to the appropriate
	Error exception.

	* src/provider/provider.py (Provider.set_pitch): rate -> pitch

	* src/provider/festival.py (FestivalConnection._read_to_buffer):
	Prevent infinite loop when select.select signals activity but in
	fact there is none (strange)

	* src/ttsapi/client.py (TCPConnection.register_callback): Typo fixed if -> elif.

	* src/ttsapi/connection.py (SocketConnection._write): Release lock even if connection crashes.

	* src/ttsapi/server.py (TCPConnection.process_input): Raise error if an exception happens during
	function call. Log traceback.

2007-09-19  Hynek Hanke  <hanke@syrr.buchal.name>

	* src/ttsapi/server.py (TCPConnection.process_input): Handle communication
	errors in connection.receive_line()

	* src/ttsapi/connection.py (Connection._communication): Call parents
	providers raise_event() when an event is received.
	(Connection.close): Only join child thread if in client mode.

	* src/ttsapi/client.py (TCPConnection): Call callbacks
	on events.
	(TCPConnection.register_callback): Changed. Rewritten.

	* src/provider/provider.py (register_callback): Removed.
	(_registered_callbacks): New variable.

2007-09-07  Hynek Hanke  <hanke@syrr.buchal.name>

	* src/ttsapi/connection.py (Connection.__init__): Initialize new
	communication thread.
	(Connection._communication): New function.
	(Connection._recv_message): New function.
	(Connection._recv_response): Modified data from the
	_communication() thread

	* src/provider/festival.py (FestivalConnection.open):
	festival-freebsoft-utils 0.7 needs explicit setting of voice

2007-06-18  Milan Zamazal  <pdm@brailcom.org>

	* src/ttsapi/connection.py (SocketConnection.__init__): Avoid
	conflict of module and argument names.

2007-06-18  Milan Zamazal  <pdm@brailcom.org>

	* src/provider/configuration.py (Configuration): Use the right
	path instead of developer's private path in `available_drivers'.

2007-06-16  Hynek Hanke  <hanke@homer.brailcom.xx>

	* src/ttsapi/server.py (TCPConnection._quit): Call provider.quit.

	* src/ttsapi/connection.py (Connection.send_command_without_reply):
	New method.	

	* src/ttsapi/client.py (TCPConnection.quit): Do not wait for reply.

	* src/provider/server.py (create_pid_file): rw->w for file creation
	using open().

	* src/provider/provider.py (Provider.quit): New method.

	* src/provider/driver.py (Core.quit): New method.
	(Controller.quit): New method.

	* src/ttsapi/server.py (TCPConnection._cmd_matches): Bugfix for
	len(command)>len(template).

	
2007-06-16  Hynek Hanke  <hanke@homer.brailcom.xx>
	
	* src/provider/provider.py: Callbacks and audio events implemented.

	* src/ttsapi/server.py (TCPConnection.process_input): Audio events
	implemented.

	* src/provider/server.py (GlobalState): New class.
	(audio_event_delivery): Implemented.

	* src/provider/event.py (EventQueue): New class;
	(EventPot): New class.
	Reworked.

	* src/provider/driver.py: Event handling reworked. 

	* src/provider/daemon.py: Daemon functionality support library.
	
	* src/provider/server.py: Run as damon.

	* src/provider/configuration.py (Configuration): Mode, pidpath,
	pidfile added. Formatting.

	* doc/tts-api-provider.texi (Server implementation): Information about the current
	implementation added.
	* doc/tts-api-provider.texi: Full node descriptions.

2007-01-06  Hynek Hanke  <hanke@brailcom.org>

	* src/ttsapi/connection.py (SocketConnection._write): Thread safe.

2006-12-30  Hynek Hanke  <hanke@brailcom.org>

	* src/provider/audio.py: Comments, cleanup.
	(Audio.stop): Call Audio.discard().
	(Audio.discard): Cleanup of structures moved here from Audio.stop().

2006-12-29  Hynek Hanke  <hanke@brailcom.org>

	* src/ttsapi/structures.py (AudioEvent): New structure.
	(VoiceDescription._attributes): Minor fixes.

	* src/ttsapi/server.py (TCPConnection): Expanded according
	to TTS API docs.
	(TCPConnection.__init__): New error defined DriverError.
	Improved debugging.

	* src/ttsapi/errors.py (_CommunicationError): New exception.
	(_CommunicationError): New exception.
	(ErrorDriverNotLoaded): New exception.
	(ErrorRetrievalSocketNotInitialized): New exception.

	* src/ttsapi/connection.py (parse_list): Moved out from Connection.
	(SocketConnection.__init__): Initialize logger.
	(SocketConnection.read_data): New method.
	(PipeConnection.NEWLINE): Newline changed to \r\n !!!
	(PipeConnection._write): flush.

	* src/ttsapi/client.py (_CommunicationError): Moved to errors.py
	(TCPConnection): Other changes/updates.

	* src/provider/server.py (audio_event_delivery): New function.
	(main): Init audio system.
	(main): Start new thread for each client.

	* src/provider/provider.py: import subprocess
	(Driver): New class.
	(Provider.__init__): Load drivers.
	(Provider.driver_capabilities): Playback emulation via retrieval.
	(Provider._new_message_id): New method.
	(Provider.say_text): Basic SSML emulation for input in plain text.
	(Provider): Basic functionality implemented.
	(Provider.set_message_id): New method.

	* src/provider/logs.py (Logging.init_stage2): Don't create
	the log object.

	* src/provider/events.py: New file. Events handling.

	* src/provider/festival.py: Basic driver functionality
	completed.

	* src/provider/driver.py: import audio.
	(RetrievalSocket.host): _host, _port renamed to host, port.
	(RetrievalSocket.__init__): open renamed to _init_
	(RetrievalSocket.send_data_block): Removed '=' signs from audio
	description block.
	(RetrievalSocket.send_data_block): Construct event list.
	Handling of events modified (see diff).
	(main_loop): Log formatter changed to include threadName.
	(main_loop): Comments.

	* src/provider/configuration.py (Configuration._conf_options): New
	options: audio_port, available_drivers, default_driver.
	(Configuration.__init__): Initialize logger.
	(Configuration.__init__): Don't create configuration.

	* src/provider/audio.py: New file. Audio susbsystem.

2006-10-29  Hynek Hanke  <hanke@brailcom.org>

	* src/provider/server.py (main): threading used instead of thread to
	invoke provider threads.

	* (): MANY changes not logged in here because they constitute
	entirely new code or bigger rewrites in these early
	stages.
	
	* src/provider/logs.py (Logging.set_prefix): New method.

2006-08-21  Hynek Hanke  <hanke@brailcom.org>

	* src/ttsapi/structures.py (Structure.attributes_dictionary):
	Bugfix.
	(_attributes): Fixes in attributes list.
	(VoiceDescription): VoiceDescription is now a Structure.
	(VoiceDescription._attributes): Removed default values, all are
	now None.

	* src/ttsapi/server.py (TCPConnection.__init__): Added missing reply
	tuples into self.commands_map.
	(TCPConnection.__init__): Added definitions for SAY TEXT * commands.
	(TCPConnection._list_drivers_reply): New function.
	(TCPConnection._list_voices_reply): New function.
	(TCPConnection._driver_capabilities_reply): Bugfix.
	(TCPConnection._driver_capabilities_reply): Handle nested lists correctly.
	(TCPConnection.process_input): SAY TEXT * commands handling reworked.

	* src/ttsapi/connection.py (Connection._arg_to_str): Put quotes
	around strings that include spaces.
	(PipeConnection.__init__): logger argument added.

	* src/provider/provider.py (Provider.init): New method.
	(driver_capabilities): driver_id argument removed.
	(Provider.voices): driver_id argument removed.

	* src/provider/festival.py: New file -- festival driver.

	* src/provider/driver.py: New file -- python driver base classes.
2006-08-09  Hynek Hanke  <hanke@brailcom.org>

	* src/ttsapi/structures.py: Correct FSF address.

	* src/ttsapi/server.py (ClientGone): New exception.
	(TCPConnection._quit): New method.
	(TCPConnection.__init__): New parameter 'logger'. Log
	communication.
	(TCPConnection.__init__): Typos in self.commands_map.
	(TCPConnection.__init__): self.errors_map : new variable.
	(TCPConnection._cmd_matches): Docstring.
	(TCPConnection._report_error): New method.
	(TCPConnection.process_input): Exception handling through
	self.errors_map.

	* src/ttsapi/errors.py: New file.

	* src/ttsapi/connection.py (SocketConnection.__init__): Added the 'logger' parameter and logging of communication.

	* src/ttsapi/client.py: Correct FSF address.

	* src/ttsapi/__init__.py: New file.

	* src/provider/server.py: Use the configuration class.
	(serve_client): Implementation over sockets.
	(main): Initialize logging, bind socket, wait for
	connections and start new threads.

	* src/provider/provider.py: Import errors.

	*  src/provider/configuration.py: New file.

	* doc/tts-api-provider.texi (Speech Synthesis Commands (text protocol)): Error codes changed.

2006-07-26  Hynek Hanke  <hanke@brailcom.org>

	* src/ttsapi/errors.py: New file.

2006-07-25  Hynek Hanke  <hanke@brailcom.org>

	* Modules structure changed.

2006-07-21  Hynek Hanke  <hanke@brailcom.org>

	* doc/tts-api-provider.texi (Introduction): Newly written.

2006-07-03  Hynek Hanke  <hanke@chopin>

	* src/api/python/ttsapi.py: Implementation of python->text protocol
	interface.

	* src/api/python/tcp_connection.py: Moved from tcp_connection.py.
	
	* src/api/python/tcp_connection.py: Moved to connection.py.

	* doc/tts-api-provider.texi (Driver Discovery (text protocol)):
	Definition of reply changed.Groups of capabilities forming sets
	are now written as sets.

	* Minor rewording of some commands and attributes to sound more
	natural (set rate relative -> set relative rate)

2006-05-27  Hynek Hanke  <hanke@chopin>

	* Initial version containing first documentation including
	description of text protocol version of TTS API and design draft.
	Python version of TTS API is included in src/api/python/.

